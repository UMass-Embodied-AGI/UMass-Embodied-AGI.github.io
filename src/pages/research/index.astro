---
import type { GetStaticPaths } from 'astro'
import { getEntry } from 'astro:content'
import Markdown from '@components/misc/Markdown.astro'
import PostPage from '@components/PostPage.astro'
import Pagination from '@components/control/Pagination.astro'
import MainGridLayout from '@layouts/MainGridLayout.astro'
import { getSortedPosts } from '@utils/content-utils'
import ImageWrapper from '@components/misc/ImageWrapper.astro'
import path from 'path'
import { getDir } from '@utils/url-utils'
import ResearchList from '@components/ResearchList.astro'
export const getStaticPaths = (async ({ paginate }) => {
  const allBlogPosts = await getSortedPosts()
  return paginate(allBlogPosts, { pageSize: PAGE_SIZE })
}) satisfies GetStaticPaths
// https://github.com/withastro/astro/issues/6507#issuecomment-1489916992

const { page } = Astro.props
const researchList = await getEntry('research', 'list')

// Group research by year
const researchByYear = new Map()
researchList.data.forEach(research => {
  const year = research.year 
  if (!researchByYear.has(year)) {
    researchByYear.set(year, [])
  }
  researchByYear.get(year).push(research)
})

// Sort years in descending order
const sortedYears = Array.from(researchByYear.keys()).sort((a,b) => b - a)
---

<MainGridLayout>
    {sortedYears.map(year => (
      <section class="mt-8">
        <h2 class="text-black/50 dark:text-white/50 text-3xl mb-4">{year}</h2>
        <ResearchList list={{ data: researchByYear.get(year) }} />
      </section>
    ))}
    <!-- <PostPage page={page}></PostPage>
    <Pagination class="mx-auto onload-animation" page={page} style=`animation-delay: calc(var(--content-delay) + ${(len)*50}ms)`></Pagination> -->
</MainGridLayout>